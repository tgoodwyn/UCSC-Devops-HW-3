# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore lock files (uncomment if you want to ignore lock files)
# .terraform.lock.hcl

# Ignore .terraform.d directory (local plugin cache)
.terraform.d/

# Ignore any local state backup files
terraform.tfstate.backup

# Ignore log files
*.log

# Ignore any local environment variables file
.env

# Ignore .idea/ directory (JetBrains IDEs)
.idea/

# Ignore .vscode/ directory (Visual Studio Code)
.vscode/

# Ignore any auto-generated documentation
docs/

# Ignore any terraform binary
terraform